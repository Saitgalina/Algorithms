internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = new int[] { 1,4,6,9,11,32,56 };
        int s = BinarySearch(numbers, 6);
        if (s == -1)
            Console.WriteLine($"элемент не содержится в массиве");
        else
            Console.WriteLine($"элемент найдет, его индекс {s}");
        foreach (int i in numbers)
        {
            Console.WriteLine(i);
        }
    }
    //Бинарный поиск сокращает пространство поиска до половины на каждом шаге.
    //Под пространством поиска мы подразумеваем подмассив данного массива, в котором находится целевое значение (если оно присутствует в массиве).
    //Первоначально пространством поиска является весь массив, а бинарный поиск переопределяет пространство поиска на каждом шаге алгоритма,
    //используя свойство массива, что он отсортирован. Это делается путем сравнения среднего значения в пространстве поиска с целевым значением.
    //Если целевое значение соответствует среднему элементу, возвращается его позиция в массиве;
    //в противном случае он отбрасывает половину пространства поиска на основе результата сравнения.
    public static int BinarySearch(int[] arr, int target)
    {
        int left = 0;
        int right = arr.Length - 1;
        while (left <= right)
        {
            int mid = (left + right) / 2;
            if (arr[mid] == target)
                return mid;
            else if (target < arr[mid])
                right = mid - 1;
            else
                left = mid + 1;
        }
        return -1;
    }
}